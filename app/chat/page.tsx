"use client"

import type React from "react"

import { useState, useEffect, useRef } from "react"
import { Button } from "@/components/ui/button"
import { Input } from "@/components/ui/input"
import { ArrowLeft, Send, Heart, Smile, Mic, Volume2 } from "lucide-react"
import Link from "next/link"
import { Navigation } from "@/components/navigation"


interface ChatMessage {
  id: string
  sender: "user" | "mana"
  message: string
  timestamp: Date
  emotionalTone?: "positive" | "negative" | "neutral" | "crisis"
  language?: string
  
}

const manaResponses = {
  greeting: [
    "рдирдорд╕реНрддреЗ! рдореИрдВ MANA рд╣реВрдВ, рдЖрдкрдХрд╛ рдорд╛рдирд╕рд┐рдХ рд╕реНрд╡рд╛рд╕реНрдереНрдп рд╕рд╛рдереАред рдЖрдЬ рдЖрдкрдХрд╛ рдорди рдХреИрд╕рд╛ рд╣реИ? ЁЯЩВ",
    "Hi there! I'm MANA, your culturally-intelligent mental health companion. What's on your mind today?",
    "Hello! Great to connect with you. How are you feeling right now?",
  ],
  sadness: [
    "рдореБрдЭреЗ рдЦреБрд╢реА рд╣реЛрдЧреА рдЕрдЧрд░ рдЖрдк рдЕрдкрдиреА рдкрд░реЗрд╢рд╛рдиреА рд╕рд╛рдЭрд╛ рдХрд░реЗрдВред рдЖрдкрдХреА рднрд╛рд╡рдирд╛рдПрдВ рдмрд┐рд▓реНрдХреБрд▓ рд╕рд╣реА рд╣реИрдВред",
    "I'm so sorry to hear that you're feeling this way. Your feelings are completely valid.",
    "It sounds like you're going through a tough time. I'm here to listen and support you.",
  ],
  anxiety: [
    "рдЪрд┐рдВрддрд╛ рд╣реЛрдирд╛ рд╕рд╛рдорд╛рдиреНрдп рд╣реИ, рдЦрд╛рд╕рдХрд░ рдкрд░реАрдХреНрд╖рд╛ рдХреЗ рд╕рдордпред рдЖрдЗрдП рдЗрд╕реЗ рдПрдХ рдХрджрдо рдореЗрдВ рд▓реЗрддреЗ рд╣реИрдВред",
    "I understand that anxiety can be overwhelming, especially during exam season. Let's take this one step at a time.",
    "Anxiety is tough, but you're not alone. What's been causing you the most worry lately?",
  ],
  stress: [
    "рддрдирд╛рд╡ рд╕рднреА рдХреЛ рдкреНрд░рднрд╛рд╡рд┐рдд рдХрд░рддрд╛ рд╣реИред рдХреНрдпрд╛ рдЖрдкрдХреЗ рдкрд░рд┐рд╡рд╛рд░ рдХрд╛ рджрдмрд╛рд╡ рднреА рдЗрд╕рдореЗрдВ рд╢рд╛рдорд┐рд▓ рд╣реИ?",
    "Stress affects us all differently, especially with family expectations. What usually helps you feel more relaxed?",
    "That sounds really challenging. Have you been able to take any breaks for yourself?",
  ],
  positive: [
    "рдпрд╣ рд╕реБрдирдХрд░ рдмрд╣реБрдд рдЦреБрд╢реА рд╣реБрдИ! рдЖрдкрдХреА рд╕рдХрд╛рд░рд╛рддреНрдордХ рдКрд░реНрдЬрд╛ рдЕрджреНрднреБрдд рд╣реИред",
    "That's wonderful to hear! I'm so glad you're feeling good. What's been going well for you?",
    "Your positive energy is amazing! What's been bringing you joy lately?",
  ],
  support: [
    "рдпрд╛рдж рд░рдЦреЗрдВ, рдХрднреА-рдХрднреА рдареАрдХ рди рд╣реЛрдирд╛ рднреА рдареАрдХ рд╣реИред рдЖрдк рдмрд╣реБрдд рдмрд╣рд╛рджреБрд░ рд╣реИрдВред",
    "Remember, it's okay to not be okay sometimes. You're taking a brave step by reaching out.",
    "You're stronger than you know. Every small step forward counts.",
  ],
  cultural: [
    "рдореИрдВ рд╕рдордЭ рд╕рдХрддрд╛ рд╣реВрдВ рдХрд┐ рднрд╛рд░рддреАрдп рдкрд░рд┐рд╡рд╛рд░реЛрдВ рдореЗрдВ рдЕрдкреЗрдХреНрд╖рд╛рдПрдВ рдХреИрд╕реА рд╣реЛрддреА рд╣реИрдВред рдЖрдкрдХреА рд╕реНрдерд┐рддрд┐ рдХреИрд╕реА рд╣реИ?",
    "I understand how family expectations work in Indian culture. How are you managing the pressure?",
    "Festival season can add extra stress with family gatherings. How are you feeling about it?",
  ],
}

export default function ChatPage() {
  const [messages, setMessages] = useState<ChatMessage[]>([])
  const [inputMessage, setInputMessage] = useState("")
  const [isTyping, setIsTyping] = useState(false)
  const [showVoiceChat, setShowVoiceChat] = useState(false)
  const [currentLanguage, setCurrentLanguage] = useState("en-IN")
  const messagesEndRef = useRef<HTMLDivElement>(null)

  useEffect(() => {
    // Load chat history from localStorage
    const savedMessages = localStorage.getItem("mana-chat-history")
    if (savedMessages) {
      setMessages(JSON.parse(savedMessages))
    } else {
      // Send initial greeting
      const greeting: ChatMessage = {
        id: "1",
        sender: "mana",
        message: manaResponses.greeting[0],
        timestamp: new Date(),
        emotionalTone: "positive",
        language: "hi-IN",
      }
      setMessages([greeting])
    }
  }, [])

  useEffect(() => {
    // Save messages to localStorage
    if (messages.length > 0) {
      localStorage.setItem("mana-chat-history", JSON.stringify(messages))
    }
  }, [messages])

  useEffect(() => {
    // Scroll to bottom when new messages arrive
    messagesEndRef.current?.scrollIntoView({ behavior: "smooth" })
  }, [messages])

  const analyzeMessage = (message: string): "positive" | "negative" | "neutral" | "crisis" => {
    const lowerMessage = message.toLowerCase()

    // Crisis keywords (English and Hindi)
    const crisisKeywords = [
      "suicide",
      "kill myself",
      "end it all",
      "hurt myself",
      "die",
      "can't go on",
      "рдЖрддреНрдорд╣рддреНрдпрд╛",
      "рдорд░рдирд╛ рдЪрд╛рд╣рддрд╛",
      "рдЬреАрдирд╛ рдирд╣реАрдВ рдЪрд╛рд╣рддрд╛",
      "рдЦреБрдж рдХреЛ рдиреБрдХрд╕рд╛рди",
    ]
    if (crisisKeywords.some((keyword) => lowerMessage.includes(keyword))) {
      return "crisis"
    }

    // Negative keywords (English and Hindi)
    const negativeKeywords = [
      "sad",
      "depressed",
      "anxious",
      "worried",
      "stressed",
      "overwhelmed",
      "lonely",
      "hopeless",
      "рдЙрджрд╛рд╕",
      "рдкрд░реЗрд╢рд╛рди",
      "рдЪрд┐рдВрддрд┐рдд",
      "рддрдирд╛рд╡",
      "рдЕрдХреЗрд▓рд╛",
      "рдирд┐рд░рд╛рд╢",
      "рдкрд░реАрдХреНрд╖рд╛",
      "рдлреЗрд▓",
    ]
    if (negativeKeywords.some((keyword) => lowerMessage.includes(keyword))) {
      return "negative"
    }

    // Positive keywords (English and Hindi)
    const positiveKeywords = [
      "happy",
      "good",
      "great",
      "amazing",
      "wonderful",
      "excited",
      "grateful",
      "better",
      "рдЦреБрд╢",
      "рдЕрдЪреНрдЫрд╛",
      "рдмреЗрд╣рддрд░",
      "рдЦреБрд╢реА",
      "рдкреНрд░рд╕рдиреНрди",
      "рд╕рдВрддреБрд╖реНрдЯ",
    ]
    if (positiveKeywords.some((keyword) => lowerMessage.includes(keyword))) {
      return "positive"
    }

    return "neutral"
  }

  const generateManaResponse = (userMessage: string, tone: string, language: string): string => {
    const lowerMessage = userMessage.toLowerCase()
    const isHindi = language.startsWith("hi")


    // Crisis response
    if (tone === "crisis") {
      return isHindi
        ? "рдореБрдЭреЗ рдЖрдкрдХреА рдмрд╣реБрдд рдЪрд┐рдВрддрд╛ рд╣реИред рдХреГрдкрдпрд╛ рддреБрд░рдВрдд рдХрд┐рд╕реА рд╡рд┐рд╢реЗрд╖рдЬреНрдЮ рд╕реЗ рд╕рдВрдкрд░реНрдХ рдХрд░реЗрдВред рдЖрдк рдорд╣рддреНрд╡рдкреВрд░реНрдг рд╣реИрдВред"
        : "I'm really concerned about you. Please reach out to a mental health professional immediately. You matter."
    }

    // Cultural context responses
    if (lowerMessage.includes("family") || lowerMessage.includes("рдкрд░рд┐рд╡рд╛рд░") || lowerMessage.includes("parents")) {
      return isHindi
        ? "рдореИрдВ рд╕рдордЭ рд╕рдХрддрд╛ рд╣реВрдВ рдХрд┐ рдкрд░рд┐рд╡рд╛рд░ рдХрд╛ рджрдмрд╛рд╡ рдХреИрд╕рд╛ рд╣реЛрддрд╛ рд╣реИред рдЖрдкрдХреА рднрд╛рд╡рдирд╛рдПрдВ рдорд╣рддреНрд╡рдкреВрд░реНрдг рд╣реИрдВред"
        : "I understand family pressure can be intense in our culture. Your feelings are valid and important."
    }


    if (lowerMessage.includes("exam") || lowerMessage.includes("рдкрд░реАрдХреНрд╖рд╛") || lowerMessage.includes("study")) {
      return isHindi
        ? "рдкрд░реАрдХреНрд╖рд╛ рдХрд╛ рддрдирд╛рд╡ рд╕рд╛рдорд╛рдиреНрдп рд╣реИред рдПрдХ рдкрд░реАрдХреНрд╖рд╛ рдЖрдкрдХреА рдкреВрд░реА рдЬрд┐рдВрджрдЧреА рддрдп рдирд╣реАрдВ рдХрд░рддреАред"
        : "Exam stress is completely normal. Remember, one exam doesn't define your entire future or worth."





    }

    // Greeting responses
    if (lowerMessage.includes("hello") || lowerMessage.includes("hi") || lowerMessage.includes("рдирдорд╕реНрддреЗ")) {
      return isHindi ? manaResponses.greeting[0] : manaResponses.greeting[1]







    }

    // Tone-based responses
    switch (tone) {
      case "negative":
        if (lowerMessage.includes("anxious") || lowerMessage.includes("рдЪрд┐рдВрддрд┐рдд")) {
          return isHindi ? manaResponses.anxiety[0] : manaResponses.anxiety[1]
        }
        if (lowerMessage.includes("stress") || lowerMessage.includes("рддрдирд╛рд╡")) {
          return isHindi ? manaResponses.stress[0] : manaResponses.stress[1]
        }
        return isHindi ? manaResponses.sadness[0] : manaResponses.sadness[1]


      case "positive":
        return isHindi ? manaResponses.positive[0] : manaResponses.positive[1]








      default:
        return isHindi ? manaResponses.support[0] : manaResponses.support[1]







    }
  }
